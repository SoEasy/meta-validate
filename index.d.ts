// Generated by dts-bundle v0.7.2
// Dependencies for this module:
//   ../rxjs

import { Subject } from 'rxjs';

export function ValidationTrigger<T>(): any;
export function Validate<T>(validators: IMVValidators<T>, validateWith?: Array<string>): any;
export function ValidateNested<T extends ReceiveValidity>(validateWith?: Array<string>): any;

/**
    * @description Тип для описания валидности полей класса T.
    */
export interface MVValidity {
        [key: string]: IMVFieldValidity | MVValidity;
}
/**
    * @description Интерфейс для описания набора ошибок поля
    */
export interface IMVFieldValidity {
        [key: string]: boolean;
}
/**
    * @description Тип функции-валидатора
    */
export type MVValidator<T> = (value: T, context: any) => boolean;
/**
    * @description Набор валидаторов поля для key-критериев
    */
export interface IMVValidators<T> {
        [key: string]: MVValidator<T>;
}
/**
    * @description Интерфейс, который по хорошему должен реализовать класс, принимающий ошибки
    */
export interface ReceiveValidity {
        /**
            * @description Обсервер, в который будут валиться ошибки
            */
        validity: Subject<Validity>;
}

/**
  * @description Хранилище данных о валидности полей с вспомогательным методом проверки на полную валидность
  */
export class Validity {
    errors: MVValidity;
    isFullValid(ignoreFields?: Array<string>): boolean;
}

